{"version":3,"sources":["components/Home/Home.js","components/Game/Settings/CharactersDescriptions.js","components/Game/Settings/Settings.js","components/Game/ProperGame/Notifications/Notifications.js","components/Game/ProperGame/Players/Players.js","components/Game/ProperGame/Information/Information.js","components/Game/ProperGame/Orders/Orders.js","components/Game/ProperGame/Chat/Chat.js","components/Game/ProperGame/GameOver/GameOver.js","components/Game/ProperGame/ProperGame.js","components/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Home","socket","setIsGameOn","isGameOn","prevUser","setPrevUser","useState","name","setName","room","setRoom","image","setImage","message","setMessage","history","useHistory","useEffect","emit","className","onSubmit","e","preventDefault","res","some","player","push","undefined","for","type","id","onChange","target","value","alt","src","style","width","height","objectFit","size","img","files","URL","createObjectURL","characterDescritptions","PLO","amorek","sędzia","wariat","komisarzCattani","lekarz","szybkiZMiasta","szybkiZMafii","święty","kokietka","terrorysta","mściciel","Settings","users","user","setGameManager","characters","setCharacters","highlightedCharacter","setHighlightedCharacter","mafiaCharacters","cityCharacters","on","gameManager","handleCheckboxChange","isAdmin","handleStopHighlightCharacter","userList","map","color","renderDescription","character","listCharacters","list","listItem","onMouseOver","onMouseOut","htmlFor","backgroundColor","checked","fontWeight","display","disabled","isNumberRight","length","isUserAdmin","isThereMafia","includes","isThereMiasto","isButtonDisabled","onClick","Notifications","notifications","notification","index","to","text","Players","amorekChoices","setAmorekChoices","handleEndDayVoting","offerer","offer","handleSecondOffer","handleHeal","chosenPlayer","playersList","players","item","isAlive","handleHighlightCharacter","textDecoration","fraction","phase","duel","offeredBy","finished","endDayVoting","accepted","offers","hasWariatActed","mścicielChoice","handleWariat","currentDay","mafiaVoting","mafiaLeader","healedByLekarz","prevMścicielChoice","hasLekarzHealedHimself","hasCattaniActed","hasPLOActed","hasAmorekActed","find","choice","filter","newAmorekChoices","handleAmorek","Information","charactersList","Orders","handleAcceptOffer","decision","handleEndDayVote","vote","handleSędziaDecision","handleDuelVote","listMafiaVotes","mafiaPlayer","votes","agreements","type2","Chat","newMessage","setNewMessage","console","log","GameOver","listPlayers","winningFraction","ProperGame","isWaitingForRes","setIsWaitingForRes","isGameOver","Game","location","useLocation","state","setUsers","setUser","manager","me","_","isEmpty","App","io","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70d14320.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./Home.css\";\r\n\r\nconst Home = ({ socket, setIsGameOn, isGameOn, prevUser, setPrevUser }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (isGameOn) {\r\n      socket.emit(\"turnHomePage\", prevUser);\r\n      setPrevUser(\"\");\r\n    }\r\n  }, []);\r\n\r\n  const handleChangeName = (e) => setName(e.target.value);\r\n\r\n  const handleChangeRoom = (e) => setRoom(e.target.value);\r\n\r\n  const handleChangeImage = (e) => {\r\n    const img = e.target.files[0];\r\n    if (e.target.files && img) {\r\n      setImage(URL.createObjectURL(img));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name || !room) {\r\n      return setMessage(\"Podaj nazwę użytkownika i nazwę pokoju\");\r\n    }\r\n    socket.emit(\"getUsersInRoom\", room, (res) => {\r\n      if (res.some((player) => player.name === name)) {\r\n        return setMessage(\r\n          \"Nazwa użytkownika zajęta: podaj inną nazwę użytkownika\"\r\n        );\r\n      } else {\r\n        socket.emit(\"getManager\", room, (res) => {\r\n          if (!res) {\r\n            setIsGameOn(true);\r\n            history.push(\"/game\", { name, room, image });\r\n            setMessage(\"Ładowanie...\");\r\n            setName(\"\");\r\n            setRoom(\"\");\r\n            setImage(undefined);\r\n            return;\r\n          } else {\r\n            setMessage(\"W pokoju trwa gra: wybierz inną nazwę pokoju\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"homeContainer\">\r\n      <h1>Witaj w Mafia Online!</h1>\r\n      <form onSubmit={handleSubmit} className=\"pure-form pure-form-stacked\">\r\n        <fieldset>\r\n          <label for=\"nameInput\">Nazwa użytkownika:</label>\r\n          <input type=\"text\" id=\"nameInput\" onChange={handleChangeName}></input>\r\n          <label for=\"roomInput\">Nazwa pokoju:</label>\r\n          <input type=\"text\" onChange={handleChangeRoom} id=\"roomInput\"></input>\r\n            <div className={image ? \"pure-g imageLabel\" : \"imageLabel\"}>\r\n             <label for=\"imageInput\" className={image && \"pure-u-2-3\"}>\r\n              Awatar (opcjonalnie): 📁\r\n            </label>  \r\n            {image && (\r\n              <img\r\n                className=\"pure-u-1-3 imagePlayer\"\r\n                alt=\"User image\"\r\n                src={image}\r\n                style={{ width: \"60px\", height: \"60px\", objectFit: \"cover\" }}\r\n              />\r\n            )}\r\n          </div>\r\n           <input\r\n              type=\"file\"\r\n              size=\"20\"\r\n              id=\"imageInput\"\r\n              onChange={handleChangeImage}\r\n            />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"OK\"\r\n            className=\"pure-button\"\r\n          ></input>\r\n          {message && <p className=\"pure-form-message\">{message}</p>}\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const characterDescritptions = {\r\n    PLO: \"Zerowej nocy poznaję postać dowolnie wybranego gracza.\", \r\n    amorek: \"Zerowej nocy łączy dwóch dowolnie wybranych graczy. Jeśli jeden z nich straci życie, to drugi również umiera .\", \r\n    sędzia: \"Decyduje, czy wyraża zgodę na pojedynek (czy dany pojedynek się odbędzie). Jeśli Sędzia nie żyje, zawsze jest zgoda na pojedynek.\",\r\n    wariat: \"W trakcie dnia może jedne raz zabić dowolnego gracza.\",\r\n    komisarzCattani: \"Każdej niezerowej nocy poznaje prawdziwą frakcję wybranego przez siebie frakcję.\",\r\n    lekarz: \"Każdej niezerowej nocy wybiera gracza, którego będzie leczyć, czyli chronić przed strzałem Mafii. Raz na grę może uleczyć samego siebie.\",\r\n    szybkiZMiasta: \"Wygrywa pojedynki bez względu na wynik głosowania (wyjątkiem jest sytuacja, kiedy wszyscy wstrzymują się od głosu i nikt nie umiera oraz pojedynek z Szybkim z Mafii, w którym liczy się wynik głosowania).\",\r\n    szybkiZMafii: \"Wygrywa pojedynki bez względu na wynik głosowania (wyjątkiem jest sytuacja, kiedy wszyscy wstrzymują się od głosu i nikt nie umiera oraz pojedynek z Szybkim z Miasta, w którym liczy się wynik głosowania). Hierarchia w Mafii - 3.\",\r\n    święty: \"Jeśli zginie w wyniku głosowania, umiera każdy, kto zagłosował na jego śmierć.\",\r\n    kokietka: \"Kokietka - w głosowaniu na koniec dnia jest sprawdzana jako Miasto. Hierarchia w Mafii - 1 (najwyższa).\", \r\n    terrorysta: \"Umierając, wybucha w następnego gracza na liście, który umiera razem z nim. Hierarchia w Mafii - 2.\", \r\n    mściciel: \"Wyłącza funkcję dowolnego gracza na następny dzień i następną noc. Hierarchia w Mafii - 4 (najniższa).\"\r\n}\r\n\r\nexport default characterDescritptions","import React, { useState, useEffect } from \"react\";\r\nimport characterDescritptions from \"./CharactersDescriptions\";\r\n\r\nimport \"./Settings.css\";\r\n\r\nconst Settings = ({ users, socket, user, setGameManager }) => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [highlightedCharacter, setHighlightedCharacter] = useState([]);\r\n\r\n  const mafiaCharacters = [\r\n    \"Kokietka\",\r\n    \"Terrorysta\",\r\n    \"Szybki z Mafii\",\r\n    \"Mściciel\",\r\n  ];\r\n  const cityCharacters = [\r\n    \"Szybki z Miasta\",\r\n    \"PLO\",\r\n    \"Komisarz Cattani\",\r\n    \"Lekarz\",\r\n    \"Sędzia\",\r\n    \"Święty\",\r\n    \"Wariat\",\r\n    \"Amorek\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    socket.on(\"changeCharacters\", (characters) => {\r\n      setCharacters(characters);\r\n    });\r\n    socket.on(\"newGame\", (gameManager) => {\r\n      setGameManager(gameManager);\r\n    });\r\n  }, []);\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    if (user.isAdmin)\r\n      socket.emit(\"chooseCharacter\", { name: e.target.name, user });\r\n  };\r\n\r\n  const handleStartGame = () => {\r\n    socket.emit(\"startGame\", { room: user.room, characters, users });\r\n  };\r\n\r\n  const handleHighlightCharacter = (item) => {\r\n    setHighlightedCharacter(item);\r\n  };\r\n\r\n  const handleStopHighlightCharacter = () => {\r\n    setHighlightedCharacter(undefined);\r\n  };\r\n\r\n  const userList = users.map((user) => (\r\n    <li\r\n      style={user.isAdmin ? { color: \"red\" } : { color: \"black\" }}\r\n      key={user.id}\r\n      className=\"usersListImage\"\r\n    >\r\n      {user.image && (\r\n        <img\r\n          src={user.image}\r\n          alt=\"User image\"\r\n          style={{ width: \"60px\", height: \"60px\", objectFit: \"cover\" }}\r\n          className=\"imagePlayer\"\r\n        />\r\n      )}\r\n      {!user.image && <div className=\"emptyImage\"></div>}\r\n      <p>{user.name}</p>\r\n    </li>\r\n  ));\r\n\r\n  const isButtonDisabled = () => {\r\n    const isNumberRight = users.length === characters.length;\r\n    const isUserAdmin = user.isAdmin;\r\n    const isThereMafia = characters.some((character) =>\r\n      mafiaCharacters.includes(character.name)\r\n    );\r\n    const isThereMiasto = characters.some((character) =>\r\n      cityCharacters.includes(character.name)\r\n    );\r\n    return !isNumberRight || !isUserAdmin || !isThereMiasto || !isThereMafia;\r\n  };\r\n\r\n  const renderDescription = (character) => {\r\n    switch (character) {\r\n      case \"PLO\":\r\n        return characterDescritptions.PLO;\r\n      case \"Lekarz\":\r\n        return characterDescritptions.lekarz;\r\n      case \"Komisarz Cattani\":\r\n        return characterDescritptions.komisarzCattani;\r\n      case \"Święty\":\r\n        return characterDescritptions.święty;\r\n      case \"Szybki z Miasta\":\r\n        return characterDescritptions.szybkiZMiasta;\r\n      case \"Wariat\":\r\n        return characterDescritptions.wariat;\r\n      case \"Mściciel\":\r\n        return characterDescritptions.mściciel;\r\n      case \"Szybki z Mafii\":\r\n        return characterDescritptions.szybkiZMafii;\r\n      case \"Sędzia\":\r\n        return characterDescritptions.sędzia;\r\n      case \"Amorek\":\r\n        return characterDescritptions.amorek;\r\n      case \"Kokietka\":\r\n        return characterDescritptions.kokietka;\r\n      case \"Terrorysta\":\r\n        return characterDescritptions.terrorysta;\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const listCharacters = (list) => {\r\n    return list.map((listItem) => {\r\n      return (\r\n        <li\r\n          key={listItem}\r\n          className=\"characterItemContainer\"\r\n          onMouseOver={() => handleHighlightCharacter(listItem)}\r\n          onMouseOut={handleStopHighlightCharacter}\r\n        >\r\n          <label\r\n            htmlFor={listItem}\r\n            className=\"characterItem\"\r\n            style={\r\n              highlightedCharacter === listItem\r\n                ? { backgroundColor: \"whiteSmoke\" }\r\n                : { backgroundColor: \"white\" }\r\n            }\r\n          >\r\n            {user.isAdmin && (\r\n              <input\r\n                type=\"checkbox\"\r\n                id={listItem}\r\n                name={listItem}\r\n                onChange={handleCheckboxChange}\r\n                checked={characters.some(\r\n                  (character) => character.name === listItem\r\n                )}\r\n              ></input>\r\n            )}\r\n            <span\r\n              style={\r\n                characters.some((character) => character.name === listItem)\r\n                  ? { fontWeight: \"bold\" }\r\n                  : null\r\n              }\r\n            >\r\n              {listItem}\r\n            </span>\r\n          </label>\r\n          <div\r\n            className=\"characterItemDescription\"\r\n            style={\r\n              highlightedCharacter === listItem\r\n                ? { display: \"block\" }\r\n                : { display: \"none\" }\r\n            }\r\n          >\r\n            {renderDescription(listItem)}\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"pure-g settingsContainer\">\r\n      <h1 className=\"pure-u-1\">Pokój {user.room}</h1>\r\n      <div className=\"pure-u-1-2 settingsColumn settingsLeftColumn\">\r\n        <h1>Gracze</h1>\r\n        <ul>{userList}</ul>\r\n      </div>\r\n      <div className=\"pure-u-1-2 settingsColumn\">\r\n        <h1>Postaci</h1>\r\n        <h2>Miasto</h2>\r\n        <ul className=\"charactersList\">{listCharacters(cityCharacters)}</ul>\r\n        <h2>Mafia</h2>\r\n        <ul className=\"charactersList\">{listCharacters(mafiaCharacters)}</ul>\r\n      </div>\r\n      <div className=\"pure-u-1\">\r\n        <input\r\n          type=\"button\"\r\n          value=\"Rozpocznij grę\"\r\n          disabled={isButtonDisabled()}\r\n          onClick={handleStartGame}\r\n          className=\"pure-button myButton\"\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import \"./Notifications.css\";\r\n\r\nconst Notifications = ({ gameManager, player }) => {\r\n  const myNotifications = (notifications) => {\r\n    return notifications.map((notification, index) => {\r\n      if (notification.to.includes(player.character.name))\r\n        return <li key={index}>{notification.text}</li>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container notificationsContainer\">\r\n      <h2>Powiadomienia</h2>\r\n      <ul className=\"notifications\">\r\n        {myNotifications(gameManager.notifications)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Players.css\";\r\n\r\nconst Players = ({\r\n  gameManager,\r\n  player,\r\n  socket,\r\n  amorekChoices,\r\n  setAmorekChoices,\r\n}) => {\r\n  const [highlightedCharacter, setHighlightedCharacter] = useState([]);\r\n\r\n  const handleHighlightCharacter = (item) => {\r\n    setHighlightedCharacter(item);\r\n  };\r\n\r\n  const handleStopHighlightCharacter = () => {\r\n    setHighlightedCharacter(undefined);\r\n  };\r\n\r\n  const handlePLO = (chosenPlayer) => {\r\n    socket.emit(\"PLOCheck\", chosenPlayer);\r\n  };\r\n\r\n  const handleAmorek = (chosenPlayer) => {\r\n    if (amorekChoices.find((choice) => choice.id === chosenPlayer.id)) {\r\n      return setAmorekChoices(\r\n        amorekChoices.filter((choice) => choice.id !== chosenPlayer.id)\r\n      );\r\n    } else {\r\n      if (amorekChoices.length < 2) {\r\n        const newAmorekChoices = [...amorekChoices, chosenPlayer];\r\n        return setAmorekChoices(newAmorekChoices);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleWariat = (item) => {\r\n    socket.emit(\"wariatKill\", item);\r\n  };\r\n\r\n  const handleEndDayVoting = (type, offerer, offer) => {\r\n    socket.emit(\"endDayVotingOffer\", type, offerer, offer);\r\n  };\r\n\r\n  const handleSecondOffer = (type, offer) => {\r\n    socket.emit(\"endDaySecondOffer\", type, player, offer);\r\n  };\r\n\r\n  const handleOfferDuel = (offer) => {\r\n    socket.emit(\"offerDuel\", offer, player);\r\n  };\r\n\r\n  const handleSuggestShot = (chosenPlayer) => {\r\n    socket.emit(\"suggestShot\", chosenPlayer, player);\r\n  };\r\n\r\n  const handleShoot = (chosenPlayer) => {\r\n    socket.emit(\"shoot\", chosenPlayer, player);\r\n  };\r\n\r\n  const handleHeal = (chosenPlayer) => {\r\n    socket.emit(\"heal\", chosenPlayer, player);\r\n  };\r\n\r\n  const handleCattaniCheck = (chosenPlayer) => {\r\n    socket.emit(\"cattaniCheck\", chosenPlayer, player);\r\n  };\r\n\r\n  const handleMścicielTurnOffFunction = (chosenPlayer) => {\r\n    socket.emit(\"mścicielTurnOffFunction\", chosenPlayer, player);\r\n  };\r\n\r\n  const playersList = gameManager.players.map((item) => (\r\n    <li\r\n      key={item.id}\r\n      style={item.isAlive ? null : { color: \"lightGray\" }}\r\n      onMouseOver={() => handleHighlightCharacter(item.name)}\r\n      onMouseOut={handleStopHighlightCharacter}\r\n    >\r\n      <div className=\"usersListImage userMenuTop\">\r\n        {!item.image && <div className=\"emptyImage\"></div>}\r\n        {item.image && (\r\n          <img\r\n            src={item.image}\r\n            alt=\"User\"\r\n            className=\"imagePlayer\"\r\n            style={{ width: \"60px\", height: \"60px\", objectFit: \"cover\" }}\r\n          />\r\n        )}\r\n        <p\r\n          style={\r\n            item.id === player.id\r\n              ? { fontWeight: \"bold\", textDecoration: \"underline\" }\r\n              : null\r\n          }\r\n        >\r\n          {item.id === player.id ? `Ja (${item.character.name})` : item.name}{\" \"}\r\n          {player.fraction === \"Mafia\" &&\r\n            item.fraction === \"Mafia\" &&\r\n            item.id !== player.id &&\r\n            `(${item.character.name})`}\r\n        </p>\r\n      </div>\r\n      {item.isAlive && gameManager.phase === \"day\" && player.isAlive && (\r\n        <ul\r\n          style={\r\n            highlightedCharacter === item.name\r\n              ? { display: \"block\" }\r\n              : { display: \"none\" }\r\n          }\r\n          className=\"usersBottomMenu\"\r\n        >\r\n          {player.id !== item.id &&\r\n            !gameManager.duel.offeredBy &&\r\n            !gameManager.duel.finished &&\r\n            !gameManager.endDayVoting.offeredBy && (\r\n              <li onClick={() => handleOfferDuel(item)}>Wyzwij na pojedynek</li>\r\n            )}\r\n          {!gameManager.endDayVoting.offeredBy &&\r\n            !gameManager.duel.offeredBy && (\r\n              <li onClick={() => handleEndDayVoting(\"check\", player, item)}>\r\n                Zaproponuj sprawdzenie\r\n              </li>\r\n            )}\r\n          {!gameManager.endDayVoting.offeredBy &&\r\n            !gameManager.duel.offeredBy && (\r\n              <li onClick={() => handleEndDayVoting(\"kill\", player, item)}>\r\n                Zaproponuj zabicie\r\n              </li>\r\n            )}\r\n          {gameManager.endDayVoting.accepted &&\r\n            gameManager.endDayVoting.offers[0].id === player.id &&\r\n            gameManager.endDayVoting.offers.length === 1 &&\r\n            item.id !== player.id && (\r\n              <li onClick={() => handleSecondOffer(\"check\", item)}>\r\n                Wybierz jako kontropropozycję - sprawdzenie\r\n              </li>\r\n            )}\r\n          {gameManager.endDayVoting.accepted &&\r\n            gameManager.endDayVoting.offers[0].id === player.id &&\r\n            gameManager.endDayVoting.offers.length === 1 &&\r\n            item.id !== player.id && (\r\n              <li onClick={() => handleSecondOffer(\"kill\", item)}>\r\n                Wybierz jako kontropropozycję - zabicie\r\n              </li>\r\n            )}\r\n          {player.character.name === \"Wariat\" &&\r\n            player.id !== item.id &&\r\n            !gameManager.endDayVoting.offeredBy &&\r\n            !gameManager.hasWariatActed &&\r\n            gameManager.mścicielChoice !== \"Wariat\" && (\r\n              <li onClick={() => handleWariat(item)}>Zabij w szale</li>\r\n            )}\r\n        </ul>\r\n      )}\r\n      {item.isAlive && gameManager.phase === \"night\" && player.isAlive && (\r\n        <ul\r\n          style={\r\n            highlightedCharacter === item.name\r\n              ? { display: \"block\" }\r\n              : { display: \"none\" }\r\n          }\r\n          className=\"usersBottomMenu\"\r\n        >\r\n          {player.fraction === \"Mafia\" &&\r\n            gameManager.currentDay !== 0 &&\r\n            !gameManager.mafiaVoting.chosenPlayer && (\r\n              <li onClick={() => handleSuggestShot(item)}>Zaproponuj strzał</li>\r\n            )}\r\n          {player.character.name === gameManager.mafiaLeader &&\r\n            gameManager.currentDay !== 0 &&\r\n            !gameManager.mafiaVoting.chosenPlayer && (\r\n              <li onClick={() => handleShoot(item)}>Oddaj strzał</li>\r\n            )}\r\n          {player.character.name === \"Lekarz\" &&\r\n            gameManager.currentDay !== 0 &&\r\n            !gameManager.healedByLekarz &&\r\n            item.id !== player.id &&\r\n            gameManager.prevMścicielChoice !== \"Lekarz\" && (\r\n              <li onClick={() => handleHeal(item)}>Ulecz</li>\r\n            )}\r\n          {player.character.name === \"Lekarz\" &&\r\n            gameManager.currentDay !== 0 &&\r\n            !gameManager.healedByLekarz &&\r\n            item.id === player.id &&\r\n            !gameManager.hasLekarzHealedHimself &&\r\n            gameManager.prevMścicielChoice !== \"Lekarz\" && (\r\n              <li onClick={() => handleHeal(item)}>Ulecz</li>\r\n            )}\r\n          {player.character.name === \"Komisarz Cattani\" &&\r\n            player.id !== item.id &&\r\n            gameManager.currentDay !== 0 &&\r\n            !gameManager.hasCattaniActed &&\r\n            gameManager.prevMścicielChoice !== \"Komisarz Cattani\" && (\r\n              <li onClick={() => handleCattaniCheck(item)}>Sprawdź frakcję</li>\r\n            )}\r\n          {player.character.name === \"PLO\" &&\r\n            player.id !== item.id &&\r\n            gameManager.currentDay === 0 &&\r\n            !gameManager.hasPLOActed && (\r\n              <li onClick={() => handlePLO(item)}>Sprawdź postać</li>\r\n            )}\r\n          {player.character.name === \"Mściciel\" &&\r\n            gameManager.currentDay !== 0 &&\r\n            !gameManager.mścicielChoice &&\r\n            gameManager.mafiaVoting.chosenPlayer &&\r\n            item.character.name !== \"Mściciel\" &&\r\n            item.character.name !== gameManager.prevMścicielChoice &&\r\n            item.fraction !== \"Mafia\" && (\r\n              <li onClick={() => handleMścicielTurnOffFunction(item)}>\r\n                Wyłącz funkcję\r\n              </li>\r\n            )}\r\n          {player.character.name === \"Amorek\" &&\r\n            gameManager.currentDay === 0 &&\r\n            !gameManager.hasAmorekActed && (\r\n              <li>\r\n                Połącz węzłami miłości{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={\r\n                    amorekChoices.find((choice) => choice.id === item.id)\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  onChange={() => handleAmorek(item)}\r\n                ></input>\r\n              </li>\r\n            )}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  ));\r\n  return (\r\n    <div className=\"playersContainer\">\r\n      <ul>{playersList}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;\r\n","import \"./Information.css\";\r\n\r\nconst Information = ({ gameManager, player }) => {\r\n  const charactersList = gameManager.characters.map((character, index) => (\r\n    <li key={index}>{character}</li>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"container informationContainer\">\r\n      <h2>Informacje</h2>\r\n      <div className=\"informationList\">\r\n      <div>\r\n          <h3>Mój nick</h3>\r\n          <p>{player.name}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Moja postać</h3>\r\n          <p>{player.character.name}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Moja frakcja</h3>\r\n          <p>{player.fraction}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Pokój</h3>\r\n          <p>{player.room}</p>\r\n        </div>\r\n        <div>\r\n          <h3>Doba i faza</h3>\r\n          <p>\r\n            {gameManager.phase === \"day\" ? \"Dzień\" : \"Noc\"} nr{\" \"}\r\n            {gameManager.currentDay}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <h3>Wszystkie postaci</h3>\r\n          <ul>{charactersList}</ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import \"./Orders.css\";\r\n\r\nconst Loader = () => {\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nconst Orders = ({\r\n  gameManager,\r\n  player,\r\n  amorekChoices,\r\n  setAmorekChoices,\r\n  socket,\r\n}) => {\r\n  const submitAmoreChoices = () => {\r\n    if (amorekChoices.length === 2) {\r\n      socket.emit(\"amorekBind\", amorekChoices, player);\r\n      setAmorekChoices([]);\r\n    }\r\n  };\r\n\r\n  const handleAcceptOffer = (decision) => {\r\n    socket.emit(\"decisionEndDayOffer\", player, decision);\r\n  };\r\n\r\n  const handleEndDayVote = (player, vote, type) => {\r\n    socket.emit(\"voteEndOfDay\", player, vote, type);\r\n  };\r\n\r\n  const handleSędziaDecision = (decision) => {\r\n    socket.emit(\"sędziaDecision\", decision, player);\r\n  };\r\n\r\n  const handleDuelVote = (vote) => {\r\n    socket.emit(\"duelVote\", player, vote);\r\n  };\r\n\r\n  const listMafiaVotes = () => {\r\n    const aliveMafiaPlayers = gameManager.players.filter((item) => {\r\n      return item.isAlive && item.fraction === \"Mafia\";\r\n    });\r\n    return aliveMafiaPlayers.map((mafiaPlayer) => {\r\n      const decision = gameManager.mafiaVoting.votes.find(\r\n        (vote) => vote[0].id === mafiaPlayer.id\r\n      );\r\n      return (\r\n        <li key={mafiaPlayer.id}>\r\n          {mafiaPlayer.id === player.id ? \"Ty\" : mafiaPlayer.name}:{\" \"}\r\n          {decision ? decision[1].name : \"brak\"}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container ordersContainer\">\r\n      <h2>Polecenia</h2>\r\n      <div className=\"ordersList\">\r\n        {gameManager.phase === \"night\" &&\r\n          player.fraction === \"Mafia\" &&\r\n          gameManager.currentDay !== 0 &&\r\n          player.isAlive &&\r\n          player.character.name !== gameManager.mafiaLeader &&\r\n          !gameManager.mafiaVoting.chosenPlayer && (\r\n            <>\r\n              <p>Zasugeruj, w kogo Mafia powinna oddać strzał</p>\r\n              <p>Oddane głosy:</p>\r\n              <ul>{listMafiaVotes()}</ul>\r\n            </>\r\n          )}\r\n        {gameManager.phase === \"night\" &&\r\n          player.character.name === gameManager.mafiaLeader &&\r\n          gameManager.currentDay !== 0 &&\r\n          player.isAlive &&\r\n          !gameManager.mafiaVoting.chosenPlayer && (\r\n            <>\r\n              <p>Zasugeruj, w kogo Mafia powinna oddać strzał i oddaj strzał</p>\r\n              <p>Oddane głosy:</p>\r\n              <ul>{listMafiaVotes()}</ul>\r\n            </>\r\n          )}\r\n        {gameManager.phase === \"night\" &&\r\n          player.character.name === \"Mściciel\" &&\r\n          gameManager.currentDay !== 0 &&\r\n          !gameManager.mścicielChoice &&\r\n          player.isAlive &&\r\n          gameManager.mafiaVoting.chosenPlayer && (\r\n            <p>Podejmij decyzję, kogo funkcję chcesz wyłączyć</p>\r\n          )}\r\n        {gameManager.phase === \"night\" &&\r\n          player.character.name === \"Komisarz Cattani\" &&\r\n          gameManager.currentDay !== 0 &&\r\n          !gameManager.hasCattaniActed &&\r\n          player.isAlive &&\r\n          gameManager.prevMścicielChoice !== \"Komisarz Cattani\" && (\r\n            <p>Podejmij decyzję, kogo frakcję chcesz sprawdzić</p>\r\n          )}\r\n        {gameManager.phase === \"night\" &&\r\n          player.character.name === \"Lekarz\" &&\r\n          gameManager.currentDay !== 0 &&\r\n          !gameManager.healedByLekarz &&\r\n          player.isAlive &&\r\n          gameManager.prevMścicielChoice !== \"Lekarz\" && (\r\n            <p>Podejmij decyzję, kogo chcesz uleczyć</p>\r\n          )}\r\n        {gameManager.phase === \"night\" &&\r\n          player.character.name === \"PLO\" &&\r\n          gameManager.currentDay === 0 &&\r\n          !gameManager.hasPLOActed &&\r\n          player.isAlive && (\r\n            <p>Podejmij decyzję, postać którego gracza chcesz sprawdzić</p>\r\n          )}\r\n        {gameManager.phase === \"night\" &&\r\n          player.character.name === \"Amorek\" &&\r\n          gameManager.currentDay === 0 &&\r\n          !gameManager.hasAmorekActed &&\r\n          player.isAlive && (\r\n            <>\r\n              <p>\r\n                Podejmij decyzję, których dwóch graczy chcesz połączyć więzami\r\n                miłości\r\n              </p>\r\n              (\r\n              <div>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Połącz\"\r\n                  onClick={submitAmoreChoices}\r\n                  className=\"pure-button\"\r\n                  disabled={amorekChoices.length !== 2}\r\n                ></input>\r\n              </div>\r\n              )\r\n            </>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          gameManager.endDayVoting.offeredBy &&\r\n          gameManager.endDayVoting.offeredBy.id !== player.id &&\r\n          player.isAlive &&\r\n          !gameManager.endDayVoting.accepted &&\r\n          !gameManager.endDayVoting.agreements.some(\r\n            (vote) => vote[0].id === player.id\r\n          ) && (\r\n            <p>\r\n              Czy wyrażasz zgodę, aby pierwszą propozycją na{\" \"}\r\n              {gameManager.endDayVoting.type === \"kill\"\r\n                ? \"zabicie\"\r\n                : \"sprawdzenie\"}{\" \"}\r\n              był następujący gracz:{\" \"}\r\n              {gameManager.endDayVoting.offers[0].id === player.id\r\n                ? \"ty\"\r\n                : gameManager.endDayVoting.offers[0].name}\r\n              ? (\r\n              <div>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"Tak\"\r\n                  className=\"pure-button\"\r\n                  onClick={() => handleAcceptOffer(true)}\r\n                ></input>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"pure-button\"\r\n                  value=\"Nie\"\r\n                  onClick={() => handleAcceptOffer(false)}\r\n                ></input>\r\n              </div>\r\n              )\r\n            </p>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          gameManager.endDayVoting.offeredBy &&\r\n          gameManager.endDayVoting.offeredBy.id !== player.id &&\r\n          player.isAlive &&\r\n          !gameManager.endDayVoting.accepted &&\r\n          gameManager.endDayVoting.agreements.some(\r\n            (vote) => vote[0].id === player.id\r\n          ) && (\r\n            <p>\r\n              Poczekaj, aż inni gracze podejmą decyzję, czy wyrażają zgodę,{\" \"}\r\n              {gameManager.endDayVoting.offers[0].id === player.id\r\n                ? \"abyś\"\r\n                : `aby gracz ${gameManager.endDayVoting.offers[0].name}`}{\" \"}\r\n              był pierwszą propozycją na{\" \"}\r\n              {gameManager.endDayVoting.type === \"kill\"\r\n                ? \"zabicie\"\r\n                : \"sprawdzenie\"}\r\n            </p>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          gameManager.endDayVoting.offeredBy &&\r\n          gameManager.endDayVoting.offeredBy.id === player.id &&\r\n          player.isAlive &&\r\n          !gameManager.endDayVoting.accepted && (\r\n            <p>\r\n              Zaproponowałeś{\" \"}\r\n              {gameManager.endDayVoting.type === \"kill\"\r\n                ? \"zabicie\"\r\n                : \"sprawdzenie\"}{\" \"}\r\n              {gameManager.endDayVoting.offers[0].id === player.id\r\n                ? \"ciebie\"\r\n                : `gracza ${gameManager.endDayVoting.offers[0].name}`}\r\n              : poczekaj, aż inni gracze wyrażą zgodę albo odrzucą Twoją\r\n              propozycję\r\n            </p>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          gameManager.endDayVoting.accepted &&\r\n          gameManager.endDayVoting.offers[0].id === player.id &&\r\n          player.isAlive &&\r\n          gameManager.endDayVoting.offers.length === 1 && (\r\n            <p>\r\n              Propozycja{\" \"}\r\n              {gameManager.endDayVoting.type === \"kill\"\r\n                ? \"zabicia\"\r\n                : \"sprawdzenia\"}{\" \"}\r\n              ciebie została przyjęta: wybierz kontrpropozycję\r\n            </p>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          gameManager.endDayVoting.accepted &&\r\n          gameManager.endDayVoting.offers[0].id !== player.id &&\r\n          player.isAlive &&\r\n          gameManager.endDayVoting.offers.length === 1 && (\r\n            <p>\r\n              Czekaj: {gameManager.endDayVoting.offers[0].name} wybiera\r\n              kontrpropozycję\r\n            </p>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          gameManager.endDayVoting.accepted &&\r\n          player.isAlive &&\r\n          gameManager.endDayVoting.offers.length === 2 &&\r\n          !gameManager.endDayVoting.votes.some(\r\n            (vote) => vote[0].id === player.id\r\n          ) && (\r\n            <>\r\n              <p>Zagłosuj:</p>(\r\n              <div>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"pure-button\"\r\n                  value={`${\r\n                    gameManager.endDayVoting.type === \"kill\"\r\n                      ? \"Zabicie\"\r\n                      : \"Sprawdzenie\"\r\n                  } ${\r\n                    gameManager.endDayVoting.offers[0].id === player.id\r\n                      ? \"ciebie\"\r\n                      : `gracza ${gameManager.endDayVoting.offers[0].name}`\r\n                  }`}\r\n                  onClick={() =>\r\n                    handleEndDayVote(\r\n                      player,\r\n                      gameManager.endDayVoting.offers[0],\r\n                      gameManager.endDayVoting.type\r\n                    )\r\n                  }\r\n                ></input>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"pure-button\"\r\n                  value={`${\r\n                    gameManager.endDayVoting.type2 === \"kill\"\r\n                      ? \"Zabicie\"\r\n                      : \"Sprawdzenie\"\r\n                  } ${\r\n                    gameManager.endDayVoting.offers[1].id === player.id\r\n                      ? \"ciebie\"\r\n                      : `gracza ${gameManager.endDayVoting.offers[1].name}`\r\n                  }`}\r\n                  onClick={() =>\r\n                    handleEndDayVote(\r\n                      player,\r\n                      gameManager.endDayVoting.offers[1],\r\n                      gameManager.endDayVoting.type2\r\n                    )\r\n                  }\r\n                ></input>\r\n              </div>\r\n              )\r\n            </>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          gameManager.endDayVoting.accepted &&\r\n          player.isAlive &&\r\n          gameManager.endDayVoting.offers.length === 2 &&\r\n          gameManager.endDayVoting.votes.some(\r\n            (vote) => vote[0].id === player.id\r\n          ) && <p>Poczekaj, aż inni gracze oddadzą swój głos.</p>}\r\n        {gameManager.phase === \"day\" &&\r\n          gameManager.duel.offeredBy &&\r\n          player.isAlive &&\r\n          !gameManager.duel.accepted &&\r\n          player.character.name !== \"Sędzia\" && (\r\n            <p>\r\n              Padło wyzwanie na pojedynek: poczekaj, aż Sędzia zadecyduje, czy\r\n              wyraża na niego zgodę\r\n            </p>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          gameManager.duel.offeredBy &&\r\n          player.isAlive &&\r\n          !gameManager.duel.accepted &&\r\n          player.character.name === \"Sędzia\" &&\r\n          gameManager.mścicielChoice !== \"Sędzia\" && (\r\n            <>\r\n              <p>\r\n                Czy wyrażasz zgodę na pojedynek między graczami:{\" \"}\r\n                {gameManager.duel.offeredBy.id === player.id\r\n                  ? \"ty\"\r\n                  : gameManager.duel.offeredBy.name}{\" \"}\r\n                i{\" \"}\r\n                {gameManager.duel.offer.id === player.id\r\n                  ? \"ty\"\r\n                  : gameManager.duel.offer.name}\r\n                ?\r\n              </p>\r\n              (\r\n              <div>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"pure-button\"\r\n                  value=\"Tak\"\r\n                  onClick={() => handleSędziaDecision(true)}\r\n                ></input>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"pure-button\"\r\n                  value=\"Nie\"\r\n                  onClick={() => handleSędziaDecision(false)}\r\n                ></input>\r\n              </div>\r\n              )}\r\n            </>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          player.isAlive &&\r\n          gameManager.duel.accepted &&\r\n          player.id !== gameManager.duel.offeredBy.id &&\r\n          player.id !== gameManager.duel.offer.id &&\r\n          !gameManager.duel.votes.some((vote) => vote[0].id === player.id) && (\r\n            <>\r\n              <p>\r\n                Trwa pojedynek: podejmij decyzję, na kogo śmierć głosujesz albo\r\n                wstrzymaj się od głosu\r\n              </p>\r\n              (\r\n              <div>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"pure-button\"\r\n                  value={`Śmierć gracza ${gameManager.duel.offeredBy.name}`}\r\n                  onClick={() => handleDuelVote(gameManager.duel.offeredBy)}\r\n                ></input>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"pure-button\"\r\n                  value={`Śmierć gracza ${gameManager.duel.offer.name}`}\r\n                  onClick={() => handleDuelVote(gameManager.duel.offer)}\r\n                ></input>\r\n                <input\r\n                  type=\"button\"\r\n                  className=\"pure-button\"\r\n                  value=\"Wstrzymaj się od głosu\"\r\n                  onClick={() => handleDuelVote(\"noVote\")}\r\n                ></input>\r\n              </div>\r\n              )\r\n            </>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          player.isAlive &&\r\n          gameManager.duel.accepted &&\r\n          (player.id === gameManager.duel.offeredBy.id ||\r\n            player.id === gameManager.duel.offer.id) && (\r\n            <p>\r\n              Trwa pojedynek, w którym uczestniczysz: poczekaj, aż wszyscy\r\n              gracze oddadzą głos\r\n            </p>\r\n          )}\r\n        {gameManager.phase === \"day\" &&\r\n          player.isAlive &&\r\n          gameManager.duel.accepted &&\r\n          player.id !== gameManager.duel.offeredBy.id &&\r\n          player.id !== gameManager.duel.offer.id &&\r\n          gameManager.duel.votes.some((vote) => vote[0].id === player.id) && (\r\n            <p>Poczekaj, aż inni gracze zadecydują, na kogo oddają swój głos</p>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import { useState } from \"react\";\r\nimport \"./Chat.css\";\r\n\r\nconst Chat = ({ gameManager, player }) => {\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  const handleNewMessage = (e) => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(newMessage);\r\n    setNewMessage(\"\");\r\n  };\r\n  return (\r\n    <div className=\"container chatContainer pure-form\">\r\n      <div className=\"chat\">\r\n        <ul>\r\n          <li>Tutaj kiedyś będzie chat</li>\r\n        </ul>\r\n      </div>\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleNewMessage}\r\n          value={newMessage}\r\n        ></input>\r\n        <input type=\"submit\" value=\"➣\" className=\"pure-button\"></input>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import \"./GameOver.css\"\r\n\r\nconst GameOver = ({ gameManager, player }) => {\r\n  const listPlayers = gameManager.players.map((item) => {\r\n    return (\r\n      <li key={item.id}>\r\n        <p>\r\n          {item.id === player.id ? \"Ty\" : `${item.name}`}: {item.character.name}{\" \"}\r\n          ({item.fraction})\r\n        </p>\r\n        {item.image && (\r\n          <img\r\n            src={item.image}\r\n            alt=\"User image\"\r\n            style={{ width: \"60px\", height: \"60px\", objectFit: \"cover\" }}\r\n          />\r\n        )}\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"pure-u-1-2\">\r\n      <div className=\"gameOverContainer\">\r\n      <h1>Koniec gry</h1>\r\n      <h2>Wygrała frakcja <span style={{textDecoration: \"underline\"}}>{gameManager.winningFraction}</span></h2>\r\n      <ul>{listPlayers}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Notifications from \"./Notifications/Notifications\";\r\nimport Players from \"./Players/Players\";\r\nimport Information from \"./Information/Information\";\r\nimport Orders from \"./Orders/Orders\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport GameOver from \"./GameOver/GameOver\";\r\n\r\nimport \"./ProperGame.css\";\r\n\r\nconst ProperGame = ({\r\n  socket,\r\n  user,\r\n  gameManager,\r\n  isWaitingForRes,\r\n  setIsWaitingForRes,\r\n}) => {\r\n  const player =\r\n    gameManager.players.find((player) => player.id === user.id) || {};\r\n  const nightStyle = { backgroundColor: \"#181818\", color: \"white\" };\r\n  const dayStyle = { backgroundColor: \"white\", color: \"black\" };\r\n  const [amorekChoices, setAmorekChoices] = useState([]);\r\n\r\n  return (\r\n    <div\r\n      style={gameManager.phase === \"night\" ? nightStyle : dayStyle}\r\n      className=\"pure-g gameContainer\"\r\n    >\r\n      {gameManager.isGameOver ? (\r\n        <GameOver gameManager={gameManager} player={user} />\r\n      ) : (\r\n        <div className=\"pure-u-1-2\">\r\n          <div className=\"leftSideGame\">\r\n            <Orders\r\n              gameManager={gameManager}\r\n              player={player}\r\n              amorekChoices={amorekChoices}\r\n              setAmorekChoices={setAmorekChoices}\r\n              socket={socket}\r\n              isWaitingForRes={isWaitingForRes}\r\n              setIsWaitingForRes={setIsWaitingForRes}\r\n            />\r\n            <Players\r\n              gameManager={gameManager}\r\n              player={player}\r\n              socket={socket}\r\n              amorekChoices={amorekChoices}\r\n              setAmorekChoices={setAmorekChoices}\r\n              isWaitingForRes={isWaitingForRes}\r\n              setIsWaitingForRes={setIsWaitingForRes}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"pure-u-1-2\">\r\n        <div className=\"rightSideGame\">\r\n          <Notifications gameManager={gameManager} player={player} />\r\n          <Chat gameManager={gameManager} player={player} />\r\n          <Information gameManager={gameManager} player={player} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProperGame;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Settings from \"./Settings/Settings\";\r\nimport ProperGame from \"./ProperGame/ProperGame\";\r\n\r\nconst Game = ({ socket, setPrevUser }) => {\r\n  const location = useLocation();\r\n  const name = location.state.name;\r\n  const room = location.state.room;\r\n  const image = location.state.image;\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState({});\r\n  const [gameManager, setGameManager] = useState({});\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"join\", { name, room, image }, (res) => {\r\n      if (res) console.log(res);\r\n    });\r\n  }, [name, room]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"roomData\", ({ users, manager }) => {\r\n      const me = users.find((user) => user.name === name);\r\n      setUsers(users);\r\n      setUser(me);\r\n      setGameManager(manager || {});\r\n      setPrevUser(me);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {_.isEmpty(gameManager) ? (\r\n        <Settings\r\n          users={users}\r\n          socket={socket}\r\n          user={user}\r\n          gameManager={gameManager}\r\n          setGameManager={setGameManager}\r\n        />\r\n      ) : (\r\n        <ProperGame\r\n          socket={socket}\r\n          user={user}\r\n          gameManager={gameManager}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\n\nimport Home from \"./components/Home/Home\";\nimport Game from \"./components/Game/Game\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const socket = io(\"https://mafia-socket-backend.herokuapp.com/\");\n  const [isGameOn, setIsGameOn] = useState(false);\n  const [prevUser, setPrevUser] = useState(\"\");\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\">\n        <Home\n          socket={socket}\n          setIsGameOn={setIsGameOn}\n          isGameOn={isGameOn}\n          prevUser={prevUser}\n          setPrevUser={setPrevUser}\n        />\n      </Route>\n      <Route exact path=\"/game\">\n        {isGameOn ? (\n          <Game socket={socket} setPrevUser={setPrevUser} />\n        ) : (\n          <Redirect to=\"/\" />\n        )}\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"purecss/build/pure.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}